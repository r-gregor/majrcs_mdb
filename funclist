### Functions ###

# fukcija, pajpne ukaz na "less -I"

so() {
eval "$@" | less -I~
}

# --------------------------------------------------------

cv() {
cdargs "$1" && cd "$(cat "$HOME/.cdargsresult")" ;

}

# --------------------------------------------------------

# funkcija, ki pred ukazom sprazni (clear) ekran

kl() {
clear && eval "$@"
}

# --------------------------------------------------------

# history list

export HISTCONTROL=erasedups

hf() {
clear
if [ $# != 1 ]; then
    echo 'Number of argumets to function "hf" must be exactly 1 [one]!'
else
    history | grep "$1"
fi
}

# himp () {
#     history > ~/bin/hlist.txt
# }

# --------------------------------------------------------


mmm() {
clear
source $HOME/.bashrc_monochrome
echo "*************************"
echo "* Use the source Luke!! *"
echo "*************************"
echo "The \"$HOME/.bashrc_monochrome\" has just been sourced!!"
echo
}


aln() {
clear
eval "$@"
echo -e "\n"
}


crtice() {
	printf "%$(tput cols)s\n" | tr " "  "-"
}


# function that displays varius date & time formated info
zdaj() {
	# clear the sreen
	clear
	zdSI=$(date +%A,\ %d.\ %B\ %Y,\ %H:%M:%S)
	echo -n "${zdSI}"
	echo -e "\n"

}

# --------------------------------------------------------

dejt() {
	dejt=$(date +%Y%m%d%H%M)
	echo $dejt
}

db0() {
	dropbox stop
}

db1() {
	dbus-launch dropbox start -i &>/dev/null
}


dbs1() {
	watch -n1 dropbox status
}


dbs2() {
  clear
  while true; do
    echo -en "$(dropbox status) \r"
    sleep 1
  done
}
# --------------------------------------------------------


### added 20160526
### function skrn that starts new terminal (xfce4-terminal) window with screen
### session divided into multiple windows ...
skrn() {

gr_FJL="~/.screen-lyt"
if [ $1 -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq 2 ] || [ $1 -eq 3 ]; then
	gr_PRM=$1
	xfce4-terminal -e "screen -c ${gr_FJL}-0${gr_PRM}" & 2>/dev/null

elif [ $1 == "db" ]; then
	xfce4-terminal -e "screen -c ${gr_FJL}-db" & 2>/dev/null

else
	gr_PRM="0"
	xfce4-terminal -e "screen -c ${gr_FJL}-0${gr_PRM}" & 2>/dev/null
fi

}

### --------------------------------------------------------------------

### added 20161111
### after installed sshfs ...


# function pim_on() -- sshfs KODI:Videos to /home/rgregor/KRZ_Movies
pim_on() {
	sshfs -o idmap=user root@192.168.64.32:/var/media/MEDION_sA/Movies /home/rgregor/KRZ_Movies
	if [ $? -eq 0 ]; then
		echo "KODI sucessfully conected to /home/rgregor/KRZ_Movies"
	else
		echo "Something went wrong ..."
	fi
}


# function pim_of() -- kill sshfs /home/rgregor/KRZ_Movies
pim_of() {
	fusermount -u /home/rgregor/KRZ_Movies
	echo "/home/rgregor/KRZ_Movies disconected."
}

### added 20170514
### pim -> Movies, pit -> TV Shows, piv -> Videos
#
#

# function pit_on() -- sshfs KODI:TV Shows to /home/rgregor/KRZ_TV_shows
pit_on() {
	sshfs -o idmap=user root@192.168.64.32:/var/media/MEDION_sA/TV\ Shows /home/rgregor/KRZ_TV_shows
	if [ $? -eq 0 ]; then
		echo "KODI sucessfully conected to /home/rgregor/KRZ_TV_shows"
	else
		echo "Something went wrong ..."
	fi
}


# function pit_of() -- kill sshfs /home/rgregor/KRZ_TV_shows
pit_of() {
	fusermount -u /home/rgregor/KRZ_TV_shows
	echo "/home/rgregor/KRZ_TV_shows disconected."
}


################################################################################
# function piv_on() -- sshfs KODI:Videos to /home/rgregor/KRZ_Videos
piv_on() {
	sshfs -o idmap=user root@192.168.64.32:/var/media/MEDION_sA/Videos /home/rgregor/KRZ_Videos
	if [ $? -eq 0 ]; then
		echo "KODI sucessfully conected to /home/rgregor/KRZ_Videos"
	else
		echo "Something went wrong ..."
	fi
}


# function piv_of() -- kill sshfs /home/rgregor/KRZ_Videos
piv_of() {
	fusermount -u /home/rgregor/KRZ_Videos
	echo "/home/rgregor/KRZ_Videos disconected."
}
################################################################################

### --------------------------------------------------------------------
### 20170119
#
cnks() {
conky &
# exit 0
clear
}

cnkk() {
sudo pkill conky
}

cml() {
	clear
	cat $HOME/majstaf/forallusers/commands-list.txt
}


### --------------------------------------------------------------------
### 20171101
wtmpp () {
    watch -d -n1 "du $TMPP"
}


### --------------------------------------------------------------------
### 20180302
256_colors () {

    for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done
}

# 20210209 display KEYBOARD SHORTCUTS
#
keybskts () {
	clear
	cat /home/rgregor/majstaf/metsys/KEYBOARD-SHORCUTS_20210209.TXT
}

# 20221213
cless() {
	if [ $# != 1 ]; then
		return
	fi

	highlight -O  ansi $@ | less
}

BrthReminder_c() {
	/home/rgregor/majstaf/majbin/BrthReminder_c/BrthReminder_c "$@"
}

BrthReminder_c_color() {
	/home/rgregor/majstaf/majbin/BrthReminder_c/BrthReminder_c_color "$@"
}

# 20230404

git_dkdb() {
	KDBWORKTREE="${HOME}/OLDHDD/Dropbox/ODPRTO"
	KDBGITDIR="${HOME}/majstaf/d_kdb/knowledgedb.git"

	/usr/bin/git --git-dir=${KDBGITDIR} --work-tree=${KDBWORKTREE} "$@"
}

git_dmts() {
	DMTSGITDIR="${HOME}/majstaf/d_metsys_git/d_metsys"
	DMTSWORKDIR="${HOME}/majstaf/d_metsys_git/src_d_metsys"

	/usr/bin/git --git-dir=${DMTSGITDIR} --work-tree=${DMTSWORKDIR} "$@"
}

git_dvol() {
	DVOLGITDIR="${HOME}/majstaf/d_vol"
	DVOLWORKDIR="${HOME}/majstaf/majvolpejpers"

	/usr/bin/git --git-dir=${DVOLGITDIR} --work-tree=${DVOLWORKDIR} "$@"
}

logout() {
		sudo loginctl terminate-user ${USER}
}

# 20241015
 function sbrn() {
	nohup alacritty -e bash --init-file ~/.bashrc_nerd >/dev/null 2>&1 &
}

sbrb() {
	nohup alacritty -e bash --init-file ~/.bashrc_base >/dev/null 2>&1 &
}


prompt_switch() {
			prompts=$(for FFF in ~/majstaf/majrcs/bashrc_prompt_*; do echo $(basename $FFF); done;)
			quit=$(echo "quit")
			choice=$(echo -e "${prompts}\n${quit}" | fzf --reverse)
			if [ "$choice" == "quit" ]; then
				:
			else
				source ~/majstaf/majrcs/${choice}
			fi
}


switch_prompt_dmn() {
			prompts=$(for FFF in ~/majstaf/majrcs/bashrc_prompt_*; do echo $(basename $FFF); done;)
			quit=$(echo "quit")
			choice=$(echo -e "${prompts}\n${quit}" | dmenu -l 5 -p "choose prompt:")
			if [ "$choice" == "quit" ]; then
				:
			else
				source ~/majstaf/majrcs/${choice}
			fi
}

switch_prompt_rofi() {
			prompts=$(for FFF in ~/majstaf/majrcs/bashrc_prompt_*; do echo $(basename $FFF); done;)
			quit=$(echo "quit")
			choice=$(echo -e "${prompts}\n${quit}" | rofi -dmenu -no-fixed-num-lines)
			if [ "$choice" == "quit" ]; then
				:
			else
				source ~/majstaf/majrcs/${choice}
			fi
}

swpd() {
	switch_prompt_dmn
}

swpr() {
	switch_prompt_rofi
}


# TESTw
nifs() {
	echo -n "setting IFS to newline ..."
	IFS=$'\n'
	echo " done."
}

oifs() {
	echo -n "setting IFS to original value ..."
	IFS=$' \t\n'
	echo " done."
}

ncd() {
	 cd "$(find "$@" -type d \( -name ".git" -o -name ".cache" \) -prune -o -name "*" 2>/dev/null |fzf -e)"
}
